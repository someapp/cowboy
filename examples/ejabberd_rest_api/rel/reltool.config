{sys, [
       {lib_dirs, []},
       {erts, [{mod_cond, derived}, {app_file, strip}]},
       {app_file, strip},
       {rel, "socialstream", "1",
        [
         kernel,
         stdlib,
         sasl,
         os_mon,
         syntax_tools,
    	 compiler,
	     inets,
	     ssl,
	     public_key,
         crypto,
         mnesia,
		 edown,
		 cowlib,
         ranch,
		 cowboy,
		 jsx,
		 json_rec,
		 mimetypes,
		 
		 parse_trans,
         ejabberd_rest_api
        ]},
       {rel, "start_clean", "",
        [
         kernel,
         stdlib
         
        ]},
       {boot_rel, "socialstream"},
       {profile, embedded},
       {incl_cond, derived},
       {debug_info, keep},
       {mod_cond, derived},
       {excl_archive_filters, [".*"]}, %% Do not archive built libs
       {excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)",
                           "^erts.*/(doc|info|include|lib|man|src)"]},
       {excl_app_filters, ["\.gitignore"]},

       {app, ejabberd_rest_api, 
       		[{mod_cond, app}, 
       		 {incl_cond, include}, 
       		 {lib_dir, ".."}]},
       {app,edown, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/edown"}
       		]}, 	
       {app,cowlib, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/cowlib"}]},
       {app,ranch, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/ranch"}]}, 	
       {app,cowboy, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/cowboy"}]}, 	
	   {app,meta, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/meta"}]},
	   {app,jsonrec, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/jsonrec"}]},        		         		 	 
	   {app,jsx, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/jsx"}]}, 	
       {app,json_rec, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/json_rec"}]}, 		 	 
	   {app,mimetypes, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/mimetypes"}]}, 		 
	   {app,reloader, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/reloader"}]}, 	
	   {app,parse_trans, 
       		[{mod_cond, app}, 
       		 {incl_cond, include},
       		 {lib_dir, "../deps/parse_trans"}]}, 	 
       {app,compiler, 
       		[{mod_cond, app}, 
       		 {incl_cond, include}]},      	
       {app, syntax_tools, 
       		[{mod_cond, app}, 
       		 {incl_cond, include}]}, 
       {app, public_key, 
       		[{mod_cond, app}, 
       		 {incl_cond, include}]},		
       {app, sasl, 
       		[{mod_cond, app}, 
       		 {incl_cond, include}]},
       {app, hipe, 
       		[{mod_cond, app}, 
       		 {incl_cond, exclude}]}    
]}.

{target_dir, "socialstream"}.

{overlay, [
           {mkdir, "log/sasl"},
           {mkdir, "priv"},
           {copy, "../priv", "./"},
           {copy, "../priv/.hosts.erlang", "./"},
           {copy, "files/erl", "\{\{erts_vsn\}\}/bin/erl"},
           {copy, "files/nodetool", "\{\{erts_vsn\}\}/bin/nodetool"},
           {copy, "files/socialstream", "bin/socialstream"},
           {copy, "files/socialstream.cmd", "bin/socialstream.cmd"},
           {copy, "files/start_erl.cmd", "bin/start_erl.cmd"},
           {copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"},
           {copy, "files/sys.config", "releases/\{\{rel_vsn\}\}/sys.config"},
           {copy, "files/vm.args", "releases/\{\{rel_vsn\}\}/vm.args"}
          ]}.
